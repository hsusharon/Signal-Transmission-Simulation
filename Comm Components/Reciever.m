function [data_output, Estimates] = Reciever(Recieved_Data, Filter_Params)
    %%Initialize the Fir coefficients of the RRC Filter
    rf      = Filter_Params(1);
    span    = Filter_Params(2);
    sps     = Filter_Params(3);
    
    Impulse_Response = Filter(rf, span, sps); 
    % Filter the Upsampled Data using the Impulse Response generated by
    % Rcosdesign
    Recieved_Data = conv(Recieved_Data,Impulse_Response,'same');

    %%Find t0 where we have to start downsampling
    t0 = time_delay_detect(Recieved_Data);

    %%Down Sampling by 16 at the right position determined by t0
    Downsampled_Data = Downsample(Recieved_Data, t0);
    
    %%find the time delay

    Max_Fft = -1000;
    Time_Delay = 0;
    for index = 1:81  %%+- 2.5ms = 80 samples
        for frame = 1:128
            data(frame) = Downsampled_Data(index+frame-1);
        end
        dft_data = fft(data);
        
        %figure(); plot(abs(dft_data));
        [M, I] = max(dft_data);
        if Max_Fft < abs(M)
            Max_Fft = abs(M);
            Time_Delay = index;
        end
        %clear data;
    end
    Time_Delay  = Time_Delay - 1;

    %%Extract transmitted data
    for index = 1:800
        trans_data(index) = Downsampled_Data(Time_Delay+index);
    end
    
    
    %%Find the frequency delay
    freq_distort = Freq_Distort_Detect(trans_data);
    freq_ratio = freq_distort/16000;
    
    Estimates = [Time_Delay freq_distort];
    %%Remove the frequency uncertainty and time delay introduced by the 
    % channel Demodulate
    data_output = Demodulator(trans_data, freq_ratio);

end

